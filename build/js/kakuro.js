// Generated by CoffeeScript 1.10.0
var Cell, Kakuro, loadKakuro;

$(function() {
  return loadKakuro('kakuros/2016-01-08.txt');
});

loadKakuro = function(url) {
  return $.get(url, function(data) {
    return new Kakuro(data);
  });
};

Kakuro = (function() {
  function Kakuro(text) {
    var cell, i, j, len, len1, line, ref, ref1, row;
    this.cells = [];
    ref = text.split('\n');
    for (i = 0, len = ref.length; i < len; i++) {
      line = ref[i];
      row = [];
      ref1 = line.split(',');
      for (j = 0, len1 = ref1.length; j < len1; j++) {
        cell = ref1[j];
        row.push(cell);
      }
      this.cells.push(row);
    }
    this.cells.pop();
    console.log(this.cells);
  }

  return Kakuro;

})();

Cell = (function() {
  function Cell(text) {
    this.raw = text;
  }

  Cell.prototype.type = function() {
    if (this.raw === 'x') {
      return 'BLANK';
    }
    if (this.raw.includes('-')) {
      return 'TOTAL';
    }
    return 'NUMBER';
  };

  Cell.prototype.render = function() {
    if (this.type() === 'BLANK') {
      return '<td class="blank"></td>';
    }
    if (this.type() === 'TOTAL') {
      return '<td class="total">' + '<table>' + '<tr>' + '<td>' + this.topRight() + '</td>' + '</tr>' + '<tr>' + '<td>' + this.bottomLeft() + '</td>' + '</tr>' + '</table>' + '</td>';
    }
    return '<td class="number">' + this.number() + '</td>';
  };

  Cell.prototype.topRight = function() {
    return this.raw.split('-')[1];
  };

  Cell.prototype.bottomLeft = function() {
    return this.raw.split('-')[0];
  };

  Cell.prototype.number = function() {
    return this.raw;
  };

  return Cell;

})();
